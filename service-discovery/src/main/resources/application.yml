server:
  port: 8761

spring:
  application:
    name: service-discovery
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:standalone}
  security:
    user:
      name: ${EUREKA_USERNAME:admin}
      password: ${EUREKA_PASSWORD:admin123}

eureka:
  instance:
    hostname: ${EUREKA_HOSTNAME:localhost}
    prefer-ip-address: false
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/
  server:
    enable-self-preservation: ${EUREKA_SELF_PRESERVATION:true}
    eviction-interval-timer-in-ms: 15000
    renewal-percent-threshold: 0.85
    expected-client-renewal-interval-seconds: 10
    response-cache-auto-expiration-in-seconds: 180
    response-cache-update-interval-ms: 30000
    use-read-only-response-cache: true
  dashboard:
    enabled: true
    path: /

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    com.netflix.eureka: WARN
    com.netflix.discovery: WARN
    com.resumescanner.servicediscovery: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/service-discovery.log

---
# Clustered mode configuration
spring:
  config:
    activate:
      on-profile: clustered
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@eureka-peer-1:8761/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@eureka-peer-2:8762/eureka/
  server:
    enable-self-preservation: true

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
eureka:
  server:
    enable-self-preservation: false
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10

logging:
  level:
    com.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG
